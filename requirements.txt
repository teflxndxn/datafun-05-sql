# requirements.txt - list all the packages the project needs
# Ignore hashes (#) - they are just used to create comments.
# Hashes will be ignored when we install packages using this file. 

# ======================================================
# STEP A - CREATE A LOCAL PROJECT VIRTUAL ENV (.venv)
# ======================================================

# Create your local project virtual environment
# This step ensures you have an isolated Python environment for your project.
# This is typically just done once at the beginning of a project.
# If it gets messed up, we can delete .venv and recreate it at any time. 

# Run the following command to create a virtual environment in the project root.
### On Windows, Use PowerShell (not cmd):
# py -m venv .venv

### On Mac/Linux:
# python3 -m venv .venv

# ======================================================
# STEP B - ACTIVATE THE (.venv)
# ======================================================

### Windows PowerShell:
# .\.venv\Scripts\activate

### Mac/Linux:
# source .venv/bin/activate

# ======================================================
# STEP C - INSTALL PACKAGES
# ======================================================

### Windows:
# py -m pip install --upgrade pip setuptools wheel
# py -m pip install --upgrade -r requirements.txt

### Mac/Linux:
# python3 -m pip install --upgrade pip setuptools wheel
# python3 -m pip install --upgrade -r requirements.txt

# ======================================================
# STEP D - SELECT VS CODE INTERPRETER
# ======================================================
# From the Command Palette: Python: Select Interpreter
# Choose the .venv interpreter.

# ======================================================
# STEP E - IF USING JUPYTER NOTEBOOKS
# ======================================================
### Windows:
# py -m ipykernel install --user --name .venv --display-name "Python (.venv)"

### Mac/Linux:
# python3 -m ipykernel install --user --name .venv --display-name "Python (.venv)"

# ======================================================
# ESSENTIAL TOOLS
# ======================================================

pip
setuptools
wheel
loguru
requests
openpyxl

# ======================================================
# DATA PROCESSING & ANALYSIS
# ======================================================

numpy
pandas

# ======================================================
# VISUALIZATION (OPTIONAL FOR CHARTING QUERY RESULTS)
# ======================================================

matplotlib
seaborn

# ======================================================
# SQL SUPPORT
# ======================================================
# sqlite3 is built into Python. No need to list here.
# SQLAlchemy (Optional if you'd like to explore ORM later)
sqlalchemy
